
PRUEBA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  000005f6  0000068a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800204  00800204  0000068e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000068e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c4a  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001de  00000000  00000000  00001482  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a28  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003bc  00000000  00000000  00002088  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bd  00000000  00000000  00002444  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fd6  00000000  00000000  00002801  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  000037d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ef       	ldi	r30, 0xF6	; 246
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 30       	cpi	r26, 0x04	; 4
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e0       	ldi	r26, 0x04	; 4
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 31       	cpi	r26, 0x16	; 22
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	fa d1       	rcall	.+1012   	; 0x514 <main>
 120:	68 c2       	rjmp	.+1232   	; 0x5f2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <i2c_init>:
	uint8_t _buff[TO_READ]; //6 bytes buffer for saving data read from the device
	readFrom(ADXL345_DATAX0, _buff, TO_READ); //read the acceleration data from the ADXL345
	*(Acce) = (((int)_buff[1]) << 8) | _buff[0]; //x
	*(Acce+1) = (((int)_buff[3]) << 8) | _buff[2]; //y
	*(Acce+2) = (((int)_buff[5]) << 8) | _buff[4]; //z
}
 124:	10 92 b9 00 	sts	0x00B9, r1
 128:	88 e4       	ldi	r24, 0x48	; 72
 12a:	80 93 b8 00 	sts	0x00B8, r24
 12e:	08 95       	ret

00000130 <i2c_start>:
 130:	94 ea       	ldi	r25, 0xA4	; 164
 132:	90 93 bc 00 	sts	0x00BC, r25
 136:	ec eb       	ldi	r30, 0xBC	; 188
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	90 81       	ld	r25, Z
 13c:	99 23       	and	r25, r25
 13e:	ec f7       	brge	.-6      	; 0x13a <i2c_start+0xa>
 140:	90 91 b9 00 	lds	r25, 0x00B9
 144:	98 7f       	andi	r25, 0xF8	; 248
 146:	98 30       	cpi	r25, 0x08	; 8
 148:	11 f0       	breq	.+4      	; 0x14e <i2c_start+0x1e>
 14a:	90 31       	cpi	r25, 0x10	; 16
 14c:	a1 f4       	brne	.+40     	; 0x176 <i2c_start+0x46>
 14e:	80 93 bb 00 	sts	0x00BB, r24
 152:	84 e8       	ldi	r24, 0x84	; 132
 154:	80 93 bc 00 	sts	0x00BC, r24
 158:	ec eb       	ldi	r30, 0xBC	; 188
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	88 23       	and	r24, r24
 160:	ec f7       	brge	.-6      	; 0x15c <i2c_start+0x2c>
 162:	90 91 b9 00 	lds	r25, 0x00B9
 166:	98 7f       	andi	r25, 0xF8	; 248
 168:	98 31       	cpi	r25, 0x18	; 24
 16a:	39 f0       	breq	.+14     	; 0x17a <i2c_start+0x4a>
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 34       	cpi	r25, 0x40	; 64
 170:	29 f4       	brne	.+10     	; 0x17c <i2c_start+0x4c>
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	08 95       	ret
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	08 95       	ret
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	08 95       	ret

0000017e <i2c_start_wait>:
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	ec eb       	ldi	r30, 0xBC	; 188
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	24 ea       	ldi	r18, 0xA4	; 164
 188:	a9 eb       	ldi	r26, 0xB9	; 185
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	cb eb       	ldi	r28, 0xBB	; 187
 18e:	d0 e0       	ldi	r29, 0x00	; 0
 190:	34 e8       	ldi	r19, 0x84	; 132
 192:	44 e9       	ldi	r20, 0x94	; 148
 194:	20 83       	st	Z, r18
 196:	90 81       	ld	r25, Z
 198:	99 23       	and	r25, r25
 19a:	ec f7       	brge	.-6      	; 0x196 <i2c_start_wait+0x18>
 19c:	9c 91       	ld	r25, X
 19e:	98 7f       	andi	r25, 0xF8	; 248
 1a0:	98 30       	cpi	r25, 0x08	; 8
 1a2:	11 f0       	breq	.+4      	; 0x1a8 <i2c_start_wait+0x2a>
 1a4:	90 31       	cpi	r25, 0x10	; 16
 1a6:	b1 f7       	brne	.-20     	; 0x194 <i2c_start_wait+0x16>
 1a8:	88 83       	st	Y, r24
 1aa:	30 83       	st	Z, r19
 1ac:	90 81       	ld	r25, Z
 1ae:	99 23       	and	r25, r25
 1b0:	ec f7       	brge	.-6      	; 0x1ac <i2c_start_wait+0x2e>
 1b2:	9c 91       	ld	r25, X
 1b4:	98 7f       	andi	r25, 0xF8	; 248
 1b6:	90 32       	cpi	r25, 0x20	; 32
 1b8:	11 f0       	breq	.+4      	; 0x1be <i2c_start_wait+0x40>
 1ba:	98 35       	cpi	r25, 0x58	; 88
 1bc:	29 f4       	brne	.+10     	; 0x1c8 <i2c_start_wait+0x4a>
 1be:	40 83       	st	Z, r20
 1c0:	90 81       	ld	r25, Z
 1c2:	94 fd       	sbrc	r25, 4
 1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <i2c_start_wait+0x42>
 1c6:	e6 cf       	rjmp	.-52     	; 0x194 <i2c_start_wait+0x16>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <i2c_stop>:
 1ce:	84 e9       	ldi	r24, 0x94	; 148
 1d0:	80 93 bc 00 	sts	0x00BC, r24
 1d4:	ec eb       	ldi	r30, 0xBC	; 188
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	84 fd       	sbrc	r24, 4
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <i2c_stop+0xa>
 1de:	08 95       	ret

000001e0 <i2c_write>:
 1e0:	80 93 bb 00 	sts	0x00BB, r24
 1e4:	84 e8       	ldi	r24, 0x84	; 132
 1e6:	80 93 bc 00 	sts	0x00BC, r24
 1ea:	ec eb       	ldi	r30, 0xBC	; 188
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	88 23       	and	r24, r24
 1f2:	ec f7       	brge	.-6      	; 0x1ee <i2c_write+0xe>
 1f4:	90 91 b9 00 	lds	r25, 0x00B9
 1f8:	98 7f       	andi	r25, 0xF8	; 248
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	98 32       	cpi	r25, 0x28	; 40
 1fe:	09 f4       	brne	.+2      	; 0x202 <i2c_write+0x22>
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	08 95       	ret

00000204 <i2c_readAck>:
 204:	84 ec       	ldi	r24, 0xC4	; 196
 206:	80 93 bc 00 	sts	0x00BC, r24
 20a:	ec eb       	ldi	r30, 0xBC	; 188
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	88 23       	and	r24, r24
 212:	ec f7       	brge	.-6      	; 0x20e <i2c_readAck+0xa>
 214:	80 91 bb 00 	lds	r24, 0x00BB
 218:	08 95       	ret

0000021a <i2c_readNak>:
 21a:	84 e8       	ldi	r24, 0x84	; 132
 21c:	80 93 bc 00 	sts	0x00BC, r24
 220:	ec eb       	ldi	r30, 0xBC	; 188
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	88 23       	and	r24, r24
 228:	ec f7       	brge	.-6      	; 0x224 <i2c_readNak+0xa>
 22a:	80 91 bb 00 	lds	r24, 0x00BB
 22e:	08 95       	ret

00000230 <Serial_begin>:
 230:	9c 01       	movw	r18, r24
 232:	40 e0       	ldi	r20, 0x00	; 0
 234:	50 e0       	ldi	r21, 0x00	; 0
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	74 e2       	ldi	r23, 0x24	; 36
 23a:	84 ef       	ldi	r24, 0xF4	; 244
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	9b d1       	rcall	.+822    	; 0x576 <__divmodsi4>
 240:	da 01       	movw	r26, r20
 242:	c9 01       	movw	r24, r18
 244:	68 94       	set
 246:	12 f8       	bld	r1, 2
 248:	b5 95       	asr	r27
 24a:	a7 95       	ror	r26
 24c:	97 95       	ror	r25
 24e:	87 95       	ror	r24
 250:	16 94       	lsr	r1
 252:	d1 f7       	brne	.-12     	; 0x248 <Serial_begin+0x18>
 254:	9c 01       	movw	r18, r24
 256:	21 50       	subi	r18, 0x01	; 1
 258:	31 09       	sbc	r19, r1
 25a:	30 93 c5 00 	sts	0x00C5, r19
 25e:	20 93 c4 00 	sts	0x00C4, r18
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	80 93 c0 00 	sts	0x00C0, r24
 268:	86 e0       	ldi	r24, 0x06	; 6
 26a:	80 93 c2 00 	sts	0x00C2, r24
 26e:	88 e1       	ldi	r24, 0x18	; 24
 270:	80 93 c1 00 	sts	0x00C1, r24
 274:	08 95       	ret

00000276 <Write_Compass>:
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	d8 2f       	mov	r29, r24
 27c:	c6 2f       	mov	r28, r22
 27e:	8c e3       	ldi	r24, 0x3C	; 60
 280:	57 df       	rcall	.-338    	; 0x130 <i2c_start>
 282:	8d 2f       	mov	r24, r29
 284:	ad df       	rcall	.-166    	; 0x1e0 <i2c_write>
 286:	8c 2f       	mov	r24, r28
 288:	ab df       	rcall	.-170    	; 0x1e0 <i2c_write>
 28a:	a1 df       	rcall	.-190    	; 0x1ce <i2c_stop>
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <Compass_SetScale>:
 292:	cf 92       	push	r12
 294:	df 92       	push	r13
 296:	ef 92       	push	r14
 298:	ff 92       	push	r15
 29a:	6b 01       	movw	r12, r22
 29c:	7c 01       	movw	r14, r24
 29e:	2e ea       	ldi	r18, 0xAE	; 174
 2a0:	37 e4       	ldi	r19, 0x47	; 71
 2a2:	41 e6       	ldi	r20, 0x61	; 97
 2a4:	5f e3       	ldi	r21, 0x3F	; 63
 2a6:	3f d1       	rcall	.+638    	; 0x526 <__cmpsf2>
 2a8:	81 11       	cpse	r24, r1
 2aa:	0e c0       	rjmp	.+28     	; 0x2c8 <Compass_SetScale+0x36>
 2ac:	88 e4       	ldi	r24, 0x48	; 72
 2ae:	91 ee       	ldi	r25, 0xE1	; 225
 2b0:	aa e3       	ldi	r26, 0x3A	; 58
 2b2:	bf e3       	ldi	r27, 0x3F	; 63
 2b4:	80 93 00 02 	sts	0x0200, r24
 2b8:	90 93 01 02 	sts	0x0201, r25
 2bc:	a0 93 02 02 	sts	0x0202, r26
 2c0:	b0 93 03 02 	sts	0x0203, r27
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	a2 c0       	rjmp	.+324    	; 0x40c <Compass_SetScale+0x17a>
 2c8:	26 e6       	ldi	r18, 0x66	; 102
 2ca:	36 e6       	ldi	r19, 0x66	; 102
 2cc:	46 ea       	ldi	r20, 0xA6	; 166
 2ce:	5f e3       	ldi	r21, 0x3F	; 63
 2d0:	c7 01       	movw	r24, r14
 2d2:	b6 01       	movw	r22, r12
 2d4:	28 d1       	rcall	.+592    	; 0x526 <__cmpsf2>
 2d6:	81 11       	cpse	r24, r1
 2d8:	0e c0       	rjmp	.+28     	; 0x2f6 <Compass_SetScale+0x64>
 2da:	8f e1       	ldi	r24, 0x1F	; 31
 2dc:	95 e8       	ldi	r25, 0x85	; 133
 2de:	ab e6       	ldi	r26, 0x6B	; 107
 2e0:	bf e3       	ldi	r27, 0x3F	; 63
 2e2:	80 93 00 02 	sts	0x0200, r24
 2e6:	90 93 01 02 	sts	0x0201, r25
 2ea:	a0 93 02 02 	sts	0x0202, r26
 2ee:	b0 93 03 02 	sts	0x0203, r27
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	8b c0       	rjmp	.+278    	; 0x40c <Compass_SetScale+0x17a>
 2f6:	23 e3       	ldi	r18, 0x33	; 51
 2f8:	33 e3       	ldi	r19, 0x33	; 51
 2fa:	43 ef       	ldi	r20, 0xF3	; 243
 2fc:	5f e3       	ldi	r21, 0x3F	; 63
 2fe:	c7 01       	movw	r24, r14
 300:	b6 01       	movw	r22, r12
 302:	11 d1       	rcall	.+546    	; 0x526 <__cmpsf2>
 304:	81 11       	cpse	r24, r1
 306:	0e c0       	rjmp	.+28     	; 0x324 <Compass_SetScale+0x92>
 308:	86 ef       	ldi	r24, 0xF6	; 246
 30a:	98 e2       	ldi	r25, 0x28	; 40
 30c:	ac e9       	ldi	r26, 0x9C	; 156
 30e:	bf e3       	ldi	r27, 0x3F	; 63
 310:	80 93 00 02 	sts	0x0200, r24
 314:	90 93 01 02 	sts	0x0201, r25
 318:	a0 93 02 02 	sts	0x0202, r26
 31c:	b0 93 03 02 	sts	0x0203, r27
 320:	62 e0       	ldi	r22, 0x02	; 2
 322:	74 c0       	rjmp	.+232    	; 0x40c <Compass_SetScale+0x17a>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 e2       	ldi	r20, 0x20	; 32
 32a:	50 e4       	ldi	r21, 0x40	; 64
 32c:	c7 01       	movw	r24, r14
 32e:	b6 01       	movw	r22, r12
 330:	fa d0       	rcall	.+500    	; 0x526 <__cmpsf2>
 332:	81 11       	cpse	r24, r1
 334:	0e c0       	rjmp	.+28     	; 0x352 <Compass_SetScale+0xc0>
 336:	8c e5       	ldi	r24, 0x5C	; 92
 338:	9f e8       	ldi	r25, 0x8F	; 143
 33a:	a2 ec       	ldi	r26, 0xC2	; 194
 33c:	bf e3       	ldi	r27, 0x3F	; 63
 33e:	80 93 00 02 	sts	0x0200, r24
 342:	90 93 01 02 	sts	0x0201, r25
 346:	a0 93 02 02 	sts	0x0202, r26
 34a:	b0 93 03 02 	sts	0x0203, r27
 34e:	63 e0       	ldi	r22, 0x03	; 3
 350:	5d c0       	rjmp	.+186    	; 0x40c <Compass_SetScale+0x17a>
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	40 e8       	ldi	r20, 0x80	; 128
 358:	50 e4       	ldi	r21, 0x40	; 64
 35a:	c7 01       	movw	r24, r14
 35c:	b6 01       	movw	r22, r12
 35e:	e3 d0       	rcall	.+454    	; 0x526 <__cmpsf2>
 360:	81 11       	cpse	r24, r1
 362:	0e c0       	rjmp	.+28     	; 0x380 <Compass_SetScale+0xee>
 364:	8e ea       	ldi	r24, 0xAE	; 174
 366:	97 e4       	ldi	r25, 0x47	; 71
 368:	a1 e1       	ldi	r26, 0x11	; 17
 36a:	b0 e4       	ldi	r27, 0x40	; 64
 36c:	80 93 00 02 	sts	0x0200, r24
 370:	90 93 01 02 	sts	0x0201, r25
 374:	a0 93 02 02 	sts	0x0202, r26
 378:	b0 93 03 02 	sts	0x0203, r27
 37c:	64 e0       	ldi	r22, 0x04	; 4
 37e:	46 c0       	rjmp	.+140    	; 0x40c <Compass_SetScale+0x17a>
 380:	26 e6       	ldi	r18, 0x66	; 102
 382:	36 e6       	ldi	r19, 0x66	; 102
 384:	46 e9       	ldi	r20, 0x96	; 150
 386:	50 e4       	ldi	r21, 0x40	; 64
 388:	c7 01       	movw	r24, r14
 38a:	b6 01       	movw	r22, r12
 38c:	cc d0       	rcall	.+408    	; 0x526 <__cmpsf2>
 38e:	81 11       	cpse	r24, r1
 390:	0e c0       	rjmp	.+28     	; 0x3ae <Compass_SetScale+0x11c>
 392:	8a e0       	ldi	r24, 0x0A	; 10
 394:	97 ed       	ldi	r25, 0xD7	; 215
 396:	a3 e2       	ldi	r26, 0x23	; 35
 398:	b0 e4       	ldi	r27, 0x40	; 64
 39a:	80 93 00 02 	sts	0x0200, r24
 39e:	90 93 01 02 	sts	0x0201, r25
 3a2:	a0 93 02 02 	sts	0x0202, r26
 3a6:	b0 93 03 02 	sts	0x0203, r27
 3aa:	65 e0       	ldi	r22, 0x05	; 5
 3ac:	2f c0       	rjmp	.+94     	; 0x40c <Compass_SetScale+0x17a>
 3ae:	23 e3       	ldi	r18, 0x33	; 51
 3b0:	33 e3       	ldi	r19, 0x33	; 51
 3b2:	43 eb       	ldi	r20, 0xB3	; 179
 3b4:	50 e4       	ldi	r21, 0x40	; 64
 3b6:	c7 01       	movw	r24, r14
 3b8:	b6 01       	movw	r22, r12
 3ba:	b5 d0       	rcall	.+362    	; 0x526 <__cmpsf2>
 3bc:	81 11       	cpse	r24, r1
 3be:	0e c0       	rjmp	.+28     	; 0x3dc <Compass_SetScale+0x14a>
 3c0:	85 e8       	ldi	r24, 0x85	; 133
 3c2:	9b ee       	ldi	r25, 0xEB	; 235
 3c4:	a1 e4       	ldi	r26, 0x41	; 65
 3c6:	b0 e4       	ldi	r27, 0x40	; 64
 3c8:	80 93 00 02 	sts	0x0200, r24
 3cc:	90 93 01 02 	sts	0x0201, r25
 3d0:	a0 93 02 02 	sts	0x0202, r26
 3d4:	b0 93 03 02 	sts	0x0203, r27
 3d8:	66 e0       	ldi	r22, 0x06	; 6
 3da:	18 c0       	rjmp	.+48     	; 0x40c <Compass_SetScale+0x17a>
 3dc:	2a e9       	ldi	r18, 0x9A	; 154
 3de:	39 e9       	ldi	r19, 0x99	; 153
 3e0:	41 e0       	ldi	r20, 0x01	; 1
 3e2:	51 e4       	ldi	r21, 0x41	; 65
 3e4:	c7 01       	movw	r24, r14
 3e6:	b6 01       	movw	r22, r12
 3e8:	9e d0       	rcall	.+316    	; 0x526 <__cmpsf2>
 3ea:	81 11       	cpse	r24, r1
 3ec:	0e c0       	rjmp	.+28     	; 0x40a <Compass_SetScale+0x178>
 3ee:	83 e3       	ldi	r24, 0x33	; 51
 3f0:	93 e3       	ldi	r25, 0x33	; 51
 3f2:	ab e8       	ldi	r26, 0x8B	; 139
 3f4:	b0 e4       	ldi	r27, 0x40	; 64
 3f6:	80 93 00 02 	sts	0x0200, r24
 3fa:	90 93 01 02 	sts	0x0201, r25
 3fe:	a0 93 02 02 	sts	0x0202, r26
 402:	b0 93 03 02 	sts	0x0203, r27
 406:	67 e0       	ldi	r22, 0x07	; 7
 408:	01 c0       	rjmp	.+2      	; 0x40c <Compass_SetScale+0x17a>
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	62 95       	swap	r22
 40e:	66 0f       	add	r22, r22
 410:	60 7e       	andi	r22, 0xE0	; 224
 412:	70 e0       	ldi	r23, 0x00	; 0
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	2e df       	rcall	.-420    	; 0x276 <Write_Compass>
 41a:	ff 90       	pop	r15
 41c:	ef 90       	pop	r14
 41e:	df 90       	pop	r13
 420:	cf 90       	pop	r12
 422:	08 95       	ret

00000424 <init_HMC5883L>:
 424:	60 e7       	ldi	r22, 0x70	; 112
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	80 e0       	ldi	r24, 0x00	; 0
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	24 df       	rcall	.-440    	; 0x276 <Write_Compass>
 42e:	66 e6       	ldi	r22, 0x66	; 102
 430:	76 e6       	ldi	r23, 0x66	; 102
 432:	86 e9       	ldi	r24, 0x96	; 150
 434:	90 e4       	ldi	r25, 0x40	; 64
 436:	2d df       	rcall	.-422    	; 0x292 <Compass_SetScale>
 438:	60 e0       	ldi	r22, 0x00	; 0
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	82 e0       	ldi	r24, 0x02	; 2
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	1a cf       	rjmp	.-460    	; 0x276 <Write_Compass>
 442:	08 95       	ret

00000444 <Read_Compass>:
 444:	cf 92       	push	r12
 446:	df 92       	push	r13
 448:	ef 92       	push	r14
 44a:	ff 92       	push	r15
 44c:	0f 93       	push	r16
 44e:	1f 93       	push	r17
 450:	cf 93       	push	r28
 452:	df 93       	push	r29
 454:	6c 01       	movw	r12, r24
 456:	e6 2e       	mov	r14, r22
 458:	8c e3       	ldi	r24, 0x3C	; 60
 45a:	91 de       	rcall	.-734    	; 0x17e <i2c_start_wait>
 45c:	83 e0       	ldi	r24, 0x03	; 3
 45e:	c0 de       	rcall	.-640    	; 0x1e0 <i2c_write>
 460:	b6 de       	rcall	.-660    	; 0x1ce <i2c_stop>
 462:	8d e3       	ldi	r24, 0x3D	; 61
 464:	65 de       	rcall	.-822    	; 0x130 <i2c_start>
 466:	f1 2c       	mov	r15, r1
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	e8 1a       	sub	r14, r24
 46c:	f1 08       	sbc	r15, r1
 46e:	1e 14       	cp	r1, r14
 470:	1f 04       	cpc	r1, r15
 472:	74 f4       	brge	.+28     	; 0x490 <Read_Compass+0x4c>
 474:	c0 e0       	ldi	r28, 0x00	; 0
 476:	86 01       	movw	r16, r12
 478:	0c 0f       	add	r16, r28
 47a:	11 1d       	adc	r17, r1
 47c:	c3 de       	rcall	.-634    	; 0x204 <i2c_readAck>
 47e:	f8 01       	movw	r30, r16
 480:	80 83       	st	Z, r24
 482:	cf 5f       	subi	r28, 0xFF	; 255
 484:	2c 2f       	mov	r18, r28
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	2e 15       	cp	r18, r14
 48a:	3f 05       	cpc	r19, r15
 48c:	a4 f3       	brlt	.-24     	; 0x476 <Read_Compass+0x32>
 48e:	01 c0       	rjmp	.+2      	; 0x492 <Read_Compass+0x4e>
 490:	c0 e0       	ldi	r28, 0x00	; 0
 492:	c6 01       	movw	r24, r12
 494:	8c 0f       	add	r24, r28
 496:	91 1d       	adc	r25, r1
 498:	ec 01       	movw	r28, r24
 49a:	bf de       	rcall	.-642    	; 0x21a <i2c_readNak>
 49c:	88 83       	st	Y, r24
 49e:	97 de       	rcall	.-722    	; 0x1ce <i2c_stop>
 4a0:	df 91       	pop	r29
 4a2:	cf 91       	pop	r28
 4a4:	1f 91       	pop	r17
 4a6:	0f 91       	pop	r16
 4a8:	ff 90       	pop	r15
 4aa:	ef 90       	pop	r14
 4ac:	df 90       	pop	r13
 4ae:	cf 90       	pop	r12
 4b0:	08 95       	ret

000004b2 <Compass_ReadRawAxis>:
 4b2:	0f 93       	push	r16
 4b4:	1f 93       	push	r17
 4b6:	cf 93       	push	r28
 4b8:	df 93       	push	r29
 4ba:	00 d0       	rcall	.+0      	; 0x4bc <Compass_ReadRawAxis+0xa>
 4bc:	00 d0       	rcall	.+0      	; 0x4be <Compass_ReadRawAxis+0xc>
 4be:	cd b7       	in	r28, 0x3d	; 61
 4c0:	de b7       	in	r29, 0x3e	; 62
 4c2:	8c 01       	movw	r16, r24
 4c4:	66 e0       	ldi	r22, 0x06	; 6
 4c6:	ce 01       	movw	r24, r28
 4c8:	01 96       	adiw	r24, 0x01	; 1
 4ca:	bc df       	rcall	.-136    	; 0x444 <Read_Compass>
 4cc:	89 81       	ldd	r24, Y+1	; 0x01
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	98 2f       	mov	r25, r24
 4d2:	88 27       	eor	r24, r24
 4d4:	2a 81       	ldd	r18, Y+2	; 0x02
 4d6:	82 2b       	or	r24, r18
 4d8:	f8 01       	movw	r30, r16
 4da:	91 83       	std	Z+1, r25	; 0x01
 4dc:	80 83       	st	Z, r24
 4de:	8b 81       	ldd	r24, Y+3	; 0x03
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	98 2f       	mov	r25, r24
 4e4:	88 27       	eor	r24, r24
 4e6:	2c 81       	ldd	r18, Y+4	; 0x04
 4e8:	82 2b       	or	r24, r18
 4ea:	93 83       	std	Z+3, r25	; 0x03
 4ec:	82 83       	std	Z+2, r24	; 0x02
 4ee:	2d 81       	ldd	r18, Y+5	; 0x05
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	32 2f       	mov	r19, r18
 4f4:	22 27       	eor	r18, r18
 4f6:	8e 81       	ldd	r24, Y+6	; 0x06
 4f8:	28 2b       	or	r18, r24
 4fa:	35 83       	std	Z+5, r19	; 0x05
 4fc:	24 83       	std	Z+4, r18	; 0x04
 4fe:	26 96       	adiw	r28, 0x06	; 6
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	f8 94       	cli
 504:	de bf       	out	0x3e, r29	; 62
 506:	0f be       	out	0x3f, r0	; 63
 508:	cd bf       	out	0x3d, r28	; 61
 50a:	df 91       	pop	r29
 50c:	cf 91       	pop	r28
 50e:	1f 91       	pop	r17
 510:	0f 91       	pop	r16
 512:	08 95       	ret

00000514 <main>:
int Mag_Raw[3];
//int Acce_Raw[3];
float Mag_Scaled[3];

int main(void){
	Serial_begin(9600);
 514:	80 e8       	ldi	r24, 0x80	; 128
 516:	95 e2       	ldi	r25, 0x25	; 37
 518:	8b de       	rcall	.-746    	; 0x230 <Serial_begin>
	i2c_init();
 51a:	04 de       	rcall	.-1016   	; 0x124 <i2c_init>
	init_HMC5883L();
 51c:	83 df       	rcall	.-250    	; 0x424 <init_HMC5883L>
	//init_Accelerometer();
	while(1){
		//compass_offset_calibration(3); //1 o 2 o 3(ambos)
		Compass_ReadRawAxis(&Mag_Raw);
 51e:	80 e1       	ldi	r24, 0x10	; 16
 520:	92 e0       	ldi	r25, 0x02	; 2
 522:	c7 df       	rcall	.-114    	; 0x4b2 <Compass_ReadRawAxis>
		Serial_write("       heading: ");	TxBCD(headingDegrees);
		Serial_write("\n\r");	*/
		/*Serial_write("  x: ");	TxBCD(Acce_Raw[0]);
		Serial_write("  y: ");	TxBCD(Acce_Raw[1]);
		Serial_write("  z: ");	TxBCD(Acce_Raw[2]);*/
	}
 524:	fc cf       	rjmp	.-8      	; 0x51e <main+0xa>

00000526 <__cmpsf2>:
 526:	03 d0       	rcall	.+6      	; 0x52e <__fp_cmp>
 528:	08 f4       	brcc	.+2      	; 0x52c <__cmpsf2+0x6>
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	08 95       	ret

0000052e <__fp_cmp>:
 52e:	99 0f       	add	r25, r25
 530:	00 08       	sbc	r0, r0
 532:	55 0f       	add	r21, r21
 534:	aa 0b       	sbc	r26, r26
 536:	e0 e8       	ldi	r30, 0x80	; 128
 538:	fe ef       	ldi	r31, 0xFE	; 254
 53a:	16 16       	cp	r1, r22
 53c:	17 06       	cpc	r1, r23
 53e:	e8 07       	cpc	r30, r24
 540:	f9 07       	cpc	r31, r25
 542:	c0 f0       	brcs	.+48     	; 0x574 <__fp_cmp+0x46>
 544:	12 16       	cp	r1, r18
 546:	13 06       	cpc	r1, r19
 548:	e4 07       	cpc	r30, r20
 54a:	f5 07       	cpc	r31, r21
 54c:	98 f0       	brcs	.+38     	; 0x574 <__fp_cmp+0x46>
 54e:	62 1b       	sub	r22, r18
 550:	73 0b       	sbc	r23, r19
 552:	84 0b       	sbc	r24, r20
 554:	95 0b       	sbc	r25, r21
 556:	39 f4       	brne	.+14     	; 0x566 <__fp_cmp+0x38>
 558:	0a 26       	eor	r0, r26
 55a:	61 f0       	breq	.+24     	; 0x574 <__fp_cmp+0x46>
 55c:	23 2b       	or	r18, r19
 55e:	24 2b       	or	r18, r20
 560:	25 2b       	or	r18, r21
 562:	21 f4       	brne	.+8      	; 0x56c <__fp_cmp+0x3e>
 564:	08 95       	ret
 566:	0a 26       	eor	r0, r26
 568:	09 f4       	brne	.+2      	; 0x56c <__fp_cmp+0x3e>
 56a:	a1 40       	sbci	r26, 0x01	; 1
 56c:	a6 95       	lsr	r26
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	81 1d       	adc	r24, r1
 572:	81 1d       	adc	r24, r1
 574:	08 95       	ret

00000576 <__divmodsi4>:
 576:	05 2e       	mov	r0, r21
 578:	97 fb       	bst	r25, 7
 57a:	16 f4       	brtc	.+4      	; 0x580 <__divmodsi4+0xa>
 57c:	00 94       	com	r0
 57e:	0f d0       	rcall	.+30     	; 0x59e <__negsi2>
 580:	57 fd       	sbrc	r21, 7
 582:	05 d0       	rcall	.+10     	; 0x58e <__divmodsi4_neg2>
 584:	14 d0       	rcall	.+40     	; 0x5ae <__udivmodsi4>
 586:	07 fc       	sbrc	r0, 7
 588:	02 d0       	rcall	.+4      	; 0x58e <__divmodsi4_neg2>
 58a:	46 f4       	brtc	.+16     	; 0x59c <__divmodsi4_exit>
 58c:	08 c0       	rjmp	.+16     	; 0x59e <__negsi2>

0000058e <__divmodsi4_neg2>:
 58e:	50 95       	com	r21
 590:	40 95       	com	r20
 592:	30 95       	com	r19
 594:	21 95       	neg	r18
 596:	3f 4f       	sbci	r19, 0xFF	; 255
 598:	4f 4f       	sbci	r20, 0xFF	; 255
 59a:	5f 4f       	sbci	r21, 0xFF	; 255

0000059c <__divmodsi4_exit>:
 59c:	08 95       	ret

0000059e <__negsi2>:
 59e:	90 95       	com	r25
 5a0:	80 95       	com	r24
 5a2:	70 95       	com	r23
 5a4:	61 95       	neg	r22
 5a6:	7f 4f       	sbci	r23, 0xFF	; 255
 5a8:	8f 4f       	sbci	r24, 0xFF	; 255
 5aa:	9f 4f       	sbci	r25, 0xFF	; 255
 5ac:	08 95       	ret

000005ae <__udivmodsi4>:
 5ae:	a1 e2       	ldi	r26, 0x21	; 33
 5b0:	1a 2e       	mov	r1, r26
 5b2:	aa 1b       	sub	r26, r26
 5b4:	bb 1b       	sub	r27, r27
 5b6:	fd 01       	movw	r30, r26
 5b8:	0d c0       	rjmp	.+26     	; 0x5d4 <__udivmodsi4_ep>

000005ba <__udivmodsi4_loop>:
 5ba:	aa 1f       	adc	r26, r26
 5bc:	bb 1f       	adc	r27, r27
 5be:	ee 1f       	adc	r30, r30
 5c0:	ff 1f       	adc	r31, r31
 5c2:	a2 17       	cp	r26, r18
 5c4:	b3 07       	cpc	r27, r19
 5c6:	e4 07       	cpc	r30, r20
 5c8:	f5 07       	cpc	r31, r21
 5ca:	20 f0       	brcs	.+8      	; 0x5d4 <__udivmodsi4_ep>
 5cc:	a2 1b       	sub	r26, r18
 5ce:	b3 0b       	sbc	r27, r19
 5d0:	e4 0b       	sbc	r30, r20
 5d2:	f5 0b       	sbc	r31, r21

000005d4 <__udivmodsi4_ep>:
 5d4:	66 1f       	adc	r22, r22
 5d6:	77 1f       	adc	r23, r23
 5d8:	88 1f       	adc	r24, r24
 5da:	99 1f       	adc	r25, r25
 5dc:	1a 94       	dec	r1
 5de:	69 f7       	brne	.-38     	; 0x5ba <__udivmodsi4_loop>
 5e0:	60 95       	com	r22
 5e2:	70 95       	com	r23
 5e4:	80 95       	com	r24
 5e6:	90 95       	com	r25
 5e8:	9b 01       	movw	r18, r22
 5ea:	ac 01       	movw	r20, r24
 5ec:	bd 01       	movw	r22, r26
 5ee:	cf 01       	movw	r24, r30
 5f0:	08 95       	ret

000005f2 <_exit>:
 5f2:	f8 94       	cli

000005f4 <__stop_program>:
 5f4:	ff cf       	rjmp	.-2      	; 0x5f4 <__stop_program>
